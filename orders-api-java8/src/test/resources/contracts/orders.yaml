openapi: 3.0.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /orders/{orderId}:
    get:
      summary: Get Order By Id
      x-contracts:
        - contractId: 1
          name: should return order if exists
          contractPath: /orders/0a818933-087d-47f2-ad83-2f986ed087eb
          priority: 1
        - contractId: 2
          name: should not return order if does not exists
          contractPath: /orders/00000000-0000-0000-0000-000000000000
          priority: 1
      tags:
        - web-order-handler
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderResource"
          x-contracts:
            - contractId: 1
              body:
                orderId: "0a818933-087d-47f2-ad83-2f986ed087eb"
                customerId: "customerId1"
                itemName: "itemName1"
                quantity: 5
        404:
          description: Order Id Not Found
          x-contracts:
            - contractId: 2
components:
  schemas:
    OrderResource:
      type: object
      properties:
        orderId:
          type: string
        customerId:
          type: string
        itemName:
          type: string
        quantity:
          type: integer
          format: int32
    CreateOrderCommand:
      type: object
      properties:
        customerId:
          type: string
        itemName:
          type: string
        quantity:
          type: integer
          format: int32
    UpdateOrderCommand:
      type: object
      properties:
        itemName:
          type: string
        quantity:
          type: integer
          format: int32
    Pageable:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/Sort"
        paged:
          type: boolean
        unpaged:
          type: boolean
        offset:
          type: integer
          format: int64
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    PageOrderResource:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          "$ref": "#/components/schemas/Pageable"
        sort:
          "$ref": "#/components/schemas/Sort"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/OrderResource"
        number:
          type: integer
          format: int32
        empty:
          type: boolean
