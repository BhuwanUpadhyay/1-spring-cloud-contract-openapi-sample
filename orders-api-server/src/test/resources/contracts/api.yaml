openapi: 3.0.1
info:
  title: Orders API
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Orders API
paths:
  "/orders/{orderId}":
    get:
      summary: Get order by id.
      tags:
        - orders
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order Resource
          content:
            "application/json":
              schema:
                "$ref": "#/components/schemas/OrderResource"
        '404':
          description: Not Found
    put:
      tags:
        - orders
      operationId: updateOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateOrderCommand"
      responses:
        '200':
          description: Order Resource
          content:
            "application/json":
              schema:
                "$ref": "#/components/schemas/OrderResource"
        '400':
          description: Errors
          content:
            "application/json":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ErrorResource"
        '404':
          description: Not Found
    delete:
      tags:
        - orders
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order Deleted
        '404':
          description: Not Found

  "/orders":
    get:
      tags:
        - orders
      operationId: listOrder
      parameters:
        - name: filters
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/OrderResource"
        - name: pageable
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/Pageable"
      responses:
        '200':
          description: List of Orders
          content:
            "application/json":
              schema:
                "$ref": "#/components/schemas/Page"
    post:
      tags:
        - orders
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrderCommand"
      responses:
        '200':
          description: Order Resource
          content:
            "application/json":
              schema:
                "$ref": "#/components/schemas/OrderResource"
        '400':
          description: Errors
          content:
            "application/json":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ErrorResource"
components:
  schemas:
    OrderResource:
      type: object
      properties:
        orderId:
          type: string
        customerId:
          type: string
        itemName:
          type: string
        quantity:
          type: integer
          format: int32
    CreateOrderCommand:
      type: object
      properties:
        customerId:
          type: string
        itemName:
          type: string
        quantity:
          type: integer
          format: int32
    UpdateOrderCommand:
      type: object
      properties:
        itemName:
          type: string
        quantity:
          type: integer
          format: int32
    Pageable:
      type: object
      properties:
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/Sort"
    ErrorResource:
      type: object
      properties:
        errorId:
          type: string
        message:
          type: string
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    Page:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        sort:
          "$ref": "#/components/schemas/Sort"
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/OrderResource"
        number:
          type: integer
          format: int32